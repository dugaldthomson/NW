function ichf_spd_gen_fft

%------------------------------------------------------------------------------
% hyd.mat contains freq_vector and psd_matrix
%------------------------------------------------------------------------------
load('hyd.mat');

%------------------------------------------------------------------------------
% Get the frequencies we want
%------------------------------------------------------------------------------
len_freq_vector = length(freq_vector);

%------------------------------------------------------------------------------
% Histogram (PDF) bin width
%------------------------------------------------------------------------------
hind = 0.1;

%------------------------------------------------------------------------------
% psd_matrix stores the PSD values. For each FFT file we will store the PSD 
% value from 250Hz to 100000Hz in 250Hz increments. So we have 400 bins of 
% 250Hz size in total (as we top out at 100kHz).
% spda is Log10
%------------------------------------------------------------------------------
spda = psd_matrix;

%------------------------------------------------------------------------------
% Minimum dB level rounded down to nearest 10
%------------------------------------------------------------------------------
%mindB = min(min(spda(spda>-Inf)))
mindB = floor(min(min(spda))/10) * 10
                        
%------------------------------------------------------------------------------
% Maximum dB level rounded up to nearest 10
%------------------------------------------------------------------------------
maxdB = ceil(max(max(spda))/10) * 10

%------------------------------------------------------------------------------
% dB values at which to calculate empirical PDF
%------------------------------------------------------------------------------
dB_vector = mindB:hind:maxdB;

%------------------------------------------------------------------------------
% Compute values
%------------------------------------------------------------------------------
disp('Computation begun.')

%------------------------------------------------------------------------------
% Calculate linear mean
%------------------------------------------------------------------------------
linear_mean = 10 * log10(mean(10.^(spda/10),2));
disp('Linear mean computed')

%------------------------------------------------------------------------------
% Array of percentiles
%------------------------------------------------------------------------------
p = prctile(spda,1:99,2);
disp('Percentiles computed')

%------------------------------------------------------------------------------
% Number of files must match what was in flist.txt
%------------------------------------------------------------------------------
%number_of_files
number_of_files = 600;
size(spda)
size(dB_vector)

%------------------------------------------------------------------------------
% SPD array
%------------------------------------------------------------------------------
d = hist(spda.',dB_vector)/(hind*(number_of_files*5-1));
disp('d computed.')

%-----------------------------------------------------------------------------
% Suppress plotting of empty hist bins
%-----------------------------------------------------------------------------
d(d == 0) = NaN; 

d = [d d(:,length(d(1,:)))];

%freq_vector
%len_freq_vector
disp('size(d)')
size(d)

%------------------------------------------------------------------------------
% Axis array for SPD pcolor plot
%------------------------------------------------------------------------------
[X,Y] = meshgrid([freq_vector;freq_vector(len_freq_vector)]-0.5,dB_vector);  
disp('SPD meshgrid computed.')

%------------------------------------------------------------------------------
% Plot
%------------------------------------------------------------------------------
figure(1)

%------------------------------------------------------------------------------
% SPD
%------------------------------------------------------------------------------
g = pcolor(X,Y,double(d));
set(g,'LineStyle','none')
colorbar

hold on

%------------------------------------------------------------------------------
% Percentiles
%------------------------------------------------------------------------------
plot(freq_vector,p(:,99),'k','linewidth',2)
plot(freq_vector,p(:,1),'k','linewidth',2)
%semilogx(freq_vector,p(:,99),'k','linewidth',2)
%semilogx(freq_vector,p(:,1),'k','linewidth',2)

%------------------------------------------------------------------------------
% Linear mean
%------------------------------------------------------------------------------
plot(freq_vector,linear_mean,'m','linewidth',2)
%semilogx(freq_vector,linear_mean,'m','linewidth',2)

%-----------------------------------------------------------------------------
% Set color axis
%-----------------------------------------------------------------------------
caxis([0 0.05])

%------------------------------------------------------------------------------
% Set graph labels
%------------------------------------------------------------------------------
title(['Spectral Probability Density of icHF1349 for Nov. 2015; ' num2str(number_of_files) ' files processed' ])
xlabel('Frequency [ Hz ]')
ylabel('PSD [ dB re 1 \muPa^2 Hz^-^1 ]')
set(gca,'XScale','linear','TickDir','out','layer','top')
%set(gca,'XScale','log','TickDir','out','layer','top')
set(colorbar,'fontsize',14,'fontname','Arial')
ylabel(colorbar,'Empirical Probability Density')
%ylim([40 130])
ylim([mindB maxdB])
xlim([1 100000])
%xlim([min(freq_vector) max(freq_vector)])
grid

end
